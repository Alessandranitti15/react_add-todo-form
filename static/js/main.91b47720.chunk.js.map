{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","getUser","usersFromServer","find","App","useState","setTitle","setUserId","formSubmit","setFormSubmit","todosFromServer","setTodos","onSubmit","e","preventDefault","trim","newTodo","reduce","maxId","Math","max","prevtodos","action","method","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91b47720.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      className={cn(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': todo.completed,\n        },\n      )}\n      data-id={todo.id} // Add data-id attribute with the todo's id\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      {todo.userId && todo.user && (\n        <div className=\"TodoInfo__user\">\n          <UserInfo user={todo.user} />\n        </div>\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nexport const createTodos = () => todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [formSubmit, setFormSubmit] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>(createTodos());\n\n  const handleSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setFormSubmit(true);\n\n    if (title.trim() === '' || userId === 0) {\n      return;\n    }\n\n    const largeId = todos.reduce((maxId, todo) => Math.max(maxId, todo.id), 0);\n\n    const newTodo: Todo = {\n      id: largeId + 1,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    setTodos((prevtodos) => [...prevtodos, newTodo]);\n\n    setTitle('');\n    setUserId(0);\n    setFormSubmit(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleSubmit} action=\"/api/todos\" method=\"POST\">\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            name=\"title\"\n            id=\"title\"\n            value={title}\n            onChange={(e) => {\n              setTitle(e.target.value);\n            }}\n          />\n          {formSubmit && !title.trim()\n            && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            name=\"user\"\n            id=\"user\"\n            value={userId}\n            onChange={(e) => {\n              setUserId(+e.target.value);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {formSubmit && userId === 0\n            && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}